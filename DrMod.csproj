<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

	<ItemGroup>
		<None Include="README.md" Pack="true" PackagePath="" />
	</ItemGroup>

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<PackageId>DrMod</PackageId>
		<Version>1.3.0</Version>
		<releaseNotes>
			# 🧪 DrMod 1.3.0 and 1.2.0 (Because the previous release hadn't include Release notes) Release Notes

			**Release Date:** January 2025
			**Target Framework:** .NET 8.0

			---

			## 🎉 What's New

			### Enhanced Mod Loader Support
			- **Improved Fabric/Quilt JSON Parsing:** Complete rewrite of JSON metadata parser with robust error handling
			- **Fixed NeoForge Detection:** Prioritized NeoForge mod detection over legacy Forge detection
			- **Better TOML Parsing:** Enhanced Forge/NeoForge TOML parser with improved section handling

			### New Performance Analysis Features
			- **Memory Usage Estimation:** `GetModsByMemoryUsage()` for sorting mods by estimated memory consumption
			- **Performance Impact Detection:** `DetectPerformanceImpactingMods()` identifies resource-heavy mods
			- **Detailed Performance Info:** `GetModPerformanceInfo()` provides comprehensive performance metrics
			- **File Size Analysis:** `GetModFileSize()` for quick mod file size queries

			### World Compatibility System
			- **World Analysis:** `GetWorldRequiredMods()` scans world saves for required mod dependencies
			- **Compatibility Reports:** `CheckWorldCompatibility()` generates detailed compatibility reports
			- **Save Validation:** Automatic detection of missing mods for existing worlds

			### Mod Management Tools
			- **Enable/Disable Functionality:** `DisableMod()` and `EnableMod()` for temporary mod management
			- **Corruption Detection:** `FindCorruptedMods()` identifies damaged or invalid mod files
			- **Repair Attempts:** `RepairMod()` basic mod validation and repair functionality

			### Modpack Support
			- **Modrinth Import:** Full support for `.mrpack` modpack files
			- **CurseForge Import:** Support for CurseForge `.zip` modpack imports
			- **Automatic Extraction:** `ImportModPack()` handles both formats seamlessly

			### Java Environment Detection
			- **JDK Discovery:** `FindRequiredJavaVersion()` locates suitable Java installations
			- **Version Mapping:** `GetRequiredJavaVersion()` determines required Java version from Minecraft version
			- **Multiple Path Support:** Searches common JDK installation locations

			---

			## 🔧 Bug Fixes

			### Critical Parser Fixes
			- 🚨 **Fixed `InvalidOperationException`:** Resolved crashes when parsing Fabric/Quilt mods with array-type `minecraft` dependencies
			- 🔍 **Improved Error Handling:** Added comprehensive try-catch blocks to prevent application crashes
			- 📊 **Enhanced Type Safety:** Added proper JSON type checking before value extraction

			### Dependency Resolution Improvements
			- **Duplicate Prevention:** Fixed duplicate dependency entries in mod metadata
			- **Section Parsing:** Corrected TOML section handling for accurate dependency extraction
			- **Self-Dependency Detection:** Added validation to prevent mods from depending on themselves

			### Metadata Accuracy
			- **Mod ID Extraction:** Fixed incorrect mod ID assignment from dependency sections
			- **Version Compatibility:** Improved version range parsing and compatibility checks
			- **Loader Detection:** Enhanced loader type identification accuracy

			---

			## 🔄 Improvements

			### Parser Robustness
			- **Fault Tolerance:** Parsers now continue processing even when individual mods fail to parse
			- **Better Logging:** Added error logging for debugging malformed mod files
			- **Graceful Degradation:** Failed parsing returns `null` instead of crashing

			### Performance Optimizations
			- **Lazy Loading:** Improved file reading efficiency for large mod collections
			- **Memory Management:** Better disposal of file handles and temporary objects
			- **Caching:** Reduced redundant file system operations

			### API Enhancements
			- **Consistent Return Types:** Standardized return types across similar methods
			- **Null Safety:** Enhanced nullable reference type usage throughout the library
			- **Documentation:** Improved XML documentation for all public methods

			---

			## 📋 Technical Details

			### Supported Formats
			- ✅ Forge: `META-INF/mods.toml`
			- ✅ NeoForge: `META-INF/neoforge.mods.toml`
			- ✅ Fabric: `fabric.mod.json`
			- ✅ Quilt: `quilt.mod.json`
			- ✅ JAR Files: All mod loader types within JAR archives
			- ✅ Modpacks: Modrinth (`.mrpack`) and CurseForge (`.zip`)

			### Platform Support
			- **Windows:** Full support with JDK detection
			- **Cross-Platform:** .NET 8 compatibility for Linux and macOS
			- **Architecture:** x64 and ARM64 support

			---

			## ⚠️ Breaking Changes
			- **None** – This release maintains full backward compatibility with existing API usage

			---

			## 🛡️ Known Issues
			- Gradle build file parsing not yet implemented (planned for future release)
			- Advanced version range parsing (Maven-style) not fully supported
			- Mod repair functionality is basic and may require external mod sources

			---

			## 📦 Dependencies
			- **.NET 8.0:** Required runtime
			- **System.Text.Json:** Built-in JSON parsing
			- **System.IO.Compression:** ZIP file handling

			---

			## 🔗 Links
			- [NuGet Package: DrMod 1.2.0](https://www.nuget.org/packages/DrMod)
			- [Documentation: DrMod Docs](#)
			- [Source Code: GitHub Repository](https://github.com/Shlomo1412/DrMod)
			- [License: MIT](https://github.com/Shlomo1412/DrMod/blob/main/LICENSE)

		</releaseNotes>
		<Authors>Shlomo1412</Authors>
		<Company>MatriX</Company>
		<Description>DrMod is a .NET 8 library for analyzing, validating, and managing Minecraft mods for Forge, NeoForge, Fabric, and Quilt.</Description>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<PackageProjectUrl>https://shlomo1412.github.io/Matrix-Site/drmod-docs.html</PackageProjectUrl>
		<RepositoryUrl>https://github.com/Shlomo1412/DrMod</RepositoryUrl>
	</PropertyGroup>

  

</Project>
